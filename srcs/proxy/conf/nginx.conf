events {}

http {
    #custom rate limiting 25r/s
    # limit_req_zone $binary_remote_addr zone=limit:10m rate=25r/s;

    include mime.types;

    # Real IP Configuration
    set_real_ip_from 10.0.0.0/8;      # Docker internal networks
    set_real_ip_from 172.16.0.0/12;    # Docker internal networks
    set_real_ip_from 192.168.0.0/16;   # Docker internal networks
    real_ip_header X-Forwarded-For;    # Use X-Forwarded-For header
    real_ip_recursive on;              # Look for the leftmost untrusted IP

    # Custom log format with real IP
    log_format custom '$remote_addr - $remote_user [$time_local] '
                      '"$request" $status $body_bytes_sent '
                      '"$http_referer" "$http_user_agent" '
                      '"$http_x_forwarded_for"';

    server {

        listen 443 ssl;
        listen [::]:443 ssl;

        ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
        ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
        ssl_protocols TLSv1.2 TLSv1.3;

        # Add headers to capture client IP
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        location / {
            # rate limiting
            # limit_req zone=limit burst=25;

            # root of the static frontend files
            root /var/www/html;
            try_files $uri /index.html;

            # Use the custom log format
            access_log /var/log/nginx/access.log custom;
        }


    }
}
