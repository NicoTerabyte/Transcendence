events {}

http {
    #custom rate limiting 25r/s
    # limit_req_zone $binary_remote_addr zone=limit:10m rate=25r/s;

    include mime.types;

    # Real IP Configuration
    set_real_ip_from 10.0.0.0/8;      # Docker internal networks
    set_real_ip_from 172.16.0.0/12;    # Docker internal networks
    set_real_ip_from 192.168.0.0/16;   # Docker internal networks
    real_ip_header X-Forwarded-For;    # Use X-Forwarded-For header
    real_ip_recursive on;              # Look for the leftmost untrusted IP

    # Custom log format with real IP
    log_format custom '$remote_addr - $remote_user [$time_local] '
                      '"$request" $status $body_bytes_sent '
                      '"$http_referer" "$http_user_agent" '
                      '"$http_x_forwarded_for"';

    #ngnix-prometheus-exporter
    server {
        listen 8080;

        location /stub_status {
            stub_status;
            allow all;
        }
    }

    server {

        listen 443 ssl;
        listen [::]:443 ssl;

        server_name localhost;
        ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
        ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
        ssl_protocols TLSv1.2 TLSv1.3;

        # Add headers to capture client IP
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $host;

        # # CORS
        # add_header 'Access-Control-Allow-Origin' '$http_origin' always;
        # add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
        # add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
        # add_header 'Access-Control-Allow-Credentials' 'true' always;

        # # Handle preflight requests for CORS
        # if ($request_method = OPTIONS) {
        #     add_header 'Access-Control-Allow-Origin' '$http_origin';
        #     add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS';
        #     add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
        #     add_header 'Access-Control-Allow-Credentials' 'true';
        #     add_header 'Content-Length' 0;
        #     add_header 'Content-Type' 'text/plain; charset=utf-8';
        #     return 204;
        # }

        #prometheus-exporter-metrics
        location /stub_status {
            stub_status;
            allow all;
        }

        location / {
            # rate limiting
            #limit_req zone=limit burst=25;
            # root of the static frontend files
            root /var/www/html;
            index index.html;
            try_files $uri $uri/ /index.html;

            # Use the custom log format
            access_log /var/log/nginx/access.log custom;
        }

        location /adminer/ {
            proxy_pass http://adminer:8080/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /grafana/ {
            proxy_pass http://grafana:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location /prometheus/ {
            proxy_pass http://prometheus:9090/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /node-exporter/ {
            proxy_pass http://node-exporter:9100/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /alertmanager/ {
            proxy_pass http://alertmanager:9093/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

    }
}
