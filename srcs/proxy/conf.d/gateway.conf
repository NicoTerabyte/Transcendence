# server {
# 	listen 80;

# 	server_name localhost;

# 	return 301 https://$host$request_uri;
# }

server {
    listen 443 ssl;
    server_name localhost;

	server_name localhost;
	ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
	ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
	ssl_protocols TLSv1.2 TLSv1.3;


	location / {
		# rate limiting
		#limit_req zone=limit burst=25;
		# root of the static frontend files
		root /var/www/html;
		index index.html;
		try_files $uri $uri/ /index.html;

		# # Use the custom log format
		# access_log /var/log/nginx/access.log custom;
	}

	location /media/ {
		# Direct file serving instead of proxying to Django
		alias /app/media/;

		# Add proper MIME type detection
		include mime.types;
		# types {
		# 	image/jpeg jpg jpeg;
		# 	image/png png;
		# 	image/gif gif;
		# 	image/webp webp;
		# }

		# Cache settings
		expires 7d;
		add_header Cache-Control "public";

		# Security headers
		add_header X-Content-Type-Options "nosniff";
	}

    # API Gateway
    location /api/ {
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
        # JWT validation for all API routes
        # auth_request /_validate_jwt;
        # auth_request_set $user_id $upstream_http_x_user_id;
        # proxy_set_header X-User-ID $user_id;

        # Route definitions
        # location /api/auth {
        #     proxy_pass http://auth-service:8001;
        # }

        # location /api/chat {
        #     proxy_pass http://chat-service:8002;
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection "upgrade";
        # }

        # location /api/tournament {
        #     proxy_pass http://tournament-service:8003;
        # }

		location /api/auth/ {
			proxy_pass http://auth-service:8001;
		}

        location /api/oauth/ {
            proxy_pass http://auth-service:8001;
        }

        location /api/user/ {
            proxy_pass http://auth-service:8001;
        }

        location /api/api/ {
            proxy_pass http://tournament-service:8003;
        }

        location /api/matches/ {
            proxy_pass http://history-service:8002;
        }

    }

	location /adminer/ {
		proxy_pass http://adminer:8080/;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
	}

	location /grafana/ {
		proxy_pass http://grafana:3000/;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;

		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
	}

	location /prometheus/ {
		proxy_pass http://prometheus:9090/;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
	}

	location /node-exporter/ {
		proxy_pass http://node-exporter:9100/;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
	}

	location /alertmanager/ {
		proxy_pass http://alertmanager:9093/;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
	}

    # # JWT validation endpoint
    # location = /_validate_jwt {
    #     internal;
    #     proxy_pass http://auth-service:8001/auth/validate/;
    #     proxy_pass_request_body off;
    #     proxy_set_header Content-Length "";
    #     proxy_set_header X-Original-URI $request_uri;
    # }
}
