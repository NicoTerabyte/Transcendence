events {}

http {
    include mime.types;
    default_type application/octet-stream;

    upstream auth-service {
        server auth-service:8001;
    }

    upstream tournament-service
    {
        server tournament-service:8003;
    }
    # upstream proxy {
    #     server proxy:443;
    # }
    # upstream chat_service {
    #     server chat_service:8004;
    # }

    #ngnix-prometheus-exporter for metrics
    server {
        listen 8080;

        location /stub_status {
            stub_status;
            allow all;
        }
    }


    server {
        listen 8000;

        #location /api/ works too
        location /auth/ {
            proxy_pass http://auth-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /oauth/ {
            proxy_pass http://auth-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /user/ {
            proxy_pass http://auth-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/ {
            proxy_pass http://tournament-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /media/ {
            # Direct file serving instead of proxying to Django
            alias /app/media/;

            # Add proper MIME type detection
            include mime.types;
            types {
                image/jpeg jpg jpeg;
                image/png png;
                image/gif gif;
                image/webp webp;
            }

            # Cache settings
            expires 7d;
            add_header Cache-Control "public";

            # Security headers
            add_header X-Content-Type-Options "nosniff";
        }

        location / {
            root /var/www/html;
            index index.html;
            try_files $uri $uri/ /index.html;
        }
    }
}
